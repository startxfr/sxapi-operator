
# Default values for configuration of a dev demo
# see values.yaml for explanation on each params
nameOverride: sxapi-dev
versionOverride: "0.0.2"
context: 
  scope: startx
  cluster: default
  environment: demo
  component: demo-sxapi
  app: demo-sxapi-deploy
  # version: "0.0.1"
sxapi:
  service:
    enabled: true
  expose:
    enabled: true
    kind: "route"
  version: "latest"
  # version: "0.3.57"
  profile: "dev:start"
  debug: true
  replicas: 2
  data: |
    sxapi.yml: |-
      name: sxapi-example
      description: sxapi example
      version: 0.0.1
      debug: true
      resources:
        serviceinfo-sample:
          _class: serviceinfo
      log:
        filters:
          level: '0,1,2,3,4'
          type: debug,info,error,warn
      server:
        port: '8077'
        endpoints:
        - path: "/"
          desc: Display welcome message (HTML)
          body: |-
              <html>
              <head><title>Application {{name}}</title></head>
              <link rel="stylesheet" href="https://goo.gl/4kFNLH">
              <body><div class="container">
              <h1><span class="glyphicon glyphicon-eye-open"></span> Your API {{name}} is
              live !</h1>
              <div class="alert alert-success" role="alert"><p>This API is {{description}}
              running on <b>{{hostname}}</b> with current release <b>v{{version}}</b></p></div>
              <div class="alert alert-info" role="alert"><p>The application signature is <b>{{appsign}}</b>
              and corespond to the example API using micro-service framework <b>{{package.name}}
              v{{package.version}}</b>.</p></div>
              <h1>Demo de deploiement</h1>
              <nav class="navbar navbar-default navbar-fixed-bottom"><div class="container">
              Microservice engine is <b>{{package.name}} v{{package.version}}</b>. {{package.description}}</div></nav>
              </div></body>
              </html>
        - path: "/health"
          resource: serviceinfo-sample
          endpoint: health
        - path: "/info"
          resource: serviceinfo-sample
          endpoint: info
        - path: "/ping"
          desc: Ping the application. Return a sample message in json
          code: '200'
          body: pong
      bot:
        lib: "/conf/mylib"
        cron:
        - id: test-cront-task
          name: Execute test cron task
          schedule: "*/1 * * * *"
          task: myCronFunction
    mylib.js: |-
      /* global $log, module */

      //'use strict';

      var mylib = {
        myCronFunction: function (config) {
          var moment = require('moment');
          $log.info("cron task " + config.id + " executed at " + moment().format('YYYY-MM-DD HH:mm:ss'));
        }
      };

      module.exports = mylib;